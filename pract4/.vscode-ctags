!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/om/Desktop/Submission/ELDD/pract4/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
.phony	Makefile	/^.phony : clean$/;"	t
MAX	multi.c	/^#define MAX /;"	d	file:
MAX	pchar.c	/^#define MAX /;"	d	file:
MAX	test.c	/^#define MAX /;"	d	file:
buf	multi.c	/^    struct kfifo buf;$/;"	m	struct:pchar_device	typeref:struct:kfifo	file:
buf	pchar.c	/^static struct kfifo buf;$/;"	v	typeref:struct:kfifo	file:
buf	test.c	/^static struct kfifo buf;$/;"	v	typeref:struct:kfifo	file:
cdev	multi.c	/^    struct cdev cdev;$/;"	m	struct:pchar_device	typeref:struct:cdev	file:
cdev	pchar.c	/^static struct cdev cdev;$/;"	v	typeref:struct:cdev	file:
cedv	test.c	/^static struct cdev cedv;$/;"	v	typeref:struct:cdev	file:
clean	Makefile	/^clean:$/;"	t
devcnt	multi.c	/^static int devcnt = 3;$/;"	v	typeref:typename:int	file:
devices	multi.c	/^struct pchar_device *devices;$/;"	v	typeref:struct:pchar_device *
devno	multi.c	/^    dev_t devno;$/;"	m	struct:pchar_device	typeref:typename:dev_t	file:
devno	pchar.c	/^static dev_t devno;$/;"	v	typeref:typename:dev_t	file:
devno	test.c	/^static dev_t devno;$/;"	v	typeref:typename:dev_t	file:
major	multi.c	/^static int major;$/;"	v	typeref:typename:int	file:
major	pchar.c	/^static int major;$/;"	v	typeref:typename:int	file:
major	test.c	/^static int major;$/;"	v	typeref:typename:int	file:
modparam_exit	mod.c	/^static __exit void modparam_exit(void)$/;"	f	typeref:typename:__exit void	file:
modparam_init	mod.c	/^static __init int modparam_init(void)$/;"	f	typeref:typename:__init int	file:
modules	Makefile	/^modules:$/;"	t
name	mod.c	/^static char *name = "desd";$/;"	v	typeref:typename:char *	file:
obj-m	Makefile	/^obj-m = mod.o$/;"	m
pcclass	test.c	/^static struct class *pcclass;$/;"	v	typeref:struct:class *	file:
pchar_close	multi.c	/^static int pchar_close(struct inode *pinode, struct file *pfile)$/;"	f	typeref:typename:int	file:
pchar_close	pchar.c	/^static int pchar_close(struct inode *pinode, struct file *pfile) {$/;"	f	typeref:typename:int	file:
pchar_device	multi.c	/^struct pchar_device$/;"	s	file:
pchar_exit	multi.c	/^static __exit void pchar_exit(void)$/;"	f	typeref:typename:__exit void	file:
pchar_exit	pchar.c	/^static __exit void pchar_exit(void) {$/;"	f	typeref:typename:__exit void	file:
pchar_fops	multi.c	/^static struct file_operations pchar_fops = {$/;"	v	typeref:struct:file_operations	file:
pchar_fops	pchar.c	/^static struct file_operations pchar_fops = {$/;"	v	typeref:struct:file_operations	file:
pchar_fops	test.c	/^static struct file_operations pchar_fops = $/;"	v	typeref:struct:file_operations	file:
pchar_init	multi.c	/^static __init int pchar_init(void)$/;"	f	typeref:typename:__init int	file:
pchar_init	pchar.c	/^static __init int pchar_init(void) {$/;"	f	typeref:typename:__init int	file:
pchar_init	test.c	/^static __init int pchar_init(void)$/;"	f	typeref:typename:__init int	file:
pchar_open	multi.c	/^static int pchar_open(struct inode *pinode, struct file *pfile)$/;"	f	typeref:typename:int	file:
pchar_open	pchar.c	/^static int pchar_open(struct inode *pinode, struct file *pfile) {$/;"	f	typeref:typename:int	file:
pchar_read	multi.c	/^static ssize_t pchar_read(struct file *pfile, char *ubuf, size_t size, loff_t *poffset)$/;"	f	typeref:typename:ssize_t	file:
pchar_read	pchar.c	/^static ssize_t pchar_read(struct file *pfile, char *ubuf, size_t size, loff_t *poffset) {$/;"	f	typeref:typename:ssize_t	file:
pchar_write	multi.c	/^static ssize_t pchar_write(struct file *pfile, const char *ubuf, size_t size, loff_t *poffset)$/;"	f	typeref:typename:ssize_t	file:
pchar_write	pchar.c	/^static ssize_t pchar_write(struct file *pfile, const char *ubuf, size_t size, loff_t *poffset) {$/;"	f	typeref:typename:ssize_t	file:
pclass	multi.c	/^static struct class *pclass;$/;"	v	typeref:struct:class *	file:
pclass	pchar.c	/^static struct class *pclass;$/;"	v	typeref:struct:class *	file:
value	mod.c	/^static int value = 3;$/;"	v	typeref:typename:int	file:
